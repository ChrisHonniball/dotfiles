[
  { "keys": ["super+shift+,"], "command": "open_file", "args": {"file": "${packages}/User/Default (OSX).sublime-keymap"} },

  // Switch Paste Behavior
  { "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" },

  // VIM Overrides
  { "keys": ["ctrl+d"],
    "command": "vi_scroll_lines",
    "args": { "forward": true }
  },

  { "keys": ["ctrl+u"],
    "command": "vi_scroll_lines",
    "args": { "forward": false }
  },

  // Exiting INSERT Mode
  { "keys": ["j", "j"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "single_selection" },
        { "command": "exit_insert_mode" },
        {
          "command": "hide_overlay",
          "context": [
            { "key": "overlay_visible", "operator": "equal", "operand": true }
          ]
        },
        {
          "command": "hide_popup",
          "context": [
            { "key": "popup_visible", "operator": "equal", "operand": true }
          ]
        },
        {
          "command": "hide_auto_complete",
          "context": [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
          ]
        }
      ]
    },
    "context": [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },
  { "keys": ["k", "k"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "single_selection" },
        { "command": "exit_insert_mode" },
        {
          "command": "hide_overlay",
          "context": [
            { "key": "overlay_visible", "operator": "equal", "operand": true }
          ]
        },
        {
          "command": "hide_popup",
          "context": [
            { "key": "popup_visible", "operator": "equal", "operand": true }
          ]
        },
        {
          "command": "hide_auto_complete",
          "context": [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
          ]
        }
      ]
    },
    "context": [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  // Save Stuff
  {
    "keys": ["super+s"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "single_selection" },
        { "command": "exit_visual_mode" },
        { "command": "exit_insert_mode" },
        { "command": "save" }
      ]
    }
  },
  { "keys": [":", "w", "enter"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "single_selection" },
        { "command": "exit_visual_mode" },
        { "command": "exit_insert_mode" },
        { "command": "save" }
      ]
    }
  },

  // Sidebar reveal file shortcut
  { "keys": ["g", "f"],
    "command": "side_bar_reveal",
    "context":
    [
      { "key": "setting.command_mode", "operand": true },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  // ctrlp command for overlay
  { "keys": ["ctrl+p"],
    "command": "show_overlay",
    "args": { "overlay": "goto", "show_files": true }
  },

  // VIM-like Movement
  {
    "keys": ["ctrl+j"],
    "command": "move",
    "args": { "by": "lines", "forward": true }
  },
  {
    "keys": ["ctrl+k"],
    "command": "move",
    "args": { "by": "lines", "forward": false }
  },
  {
    "keys": ["ctrl+l"],
    "command": "move",
    "args": { "by": "characters", "forward": true }
  },
  {
    "keys": ["ctrl+h"],
    "command": "move",
    "args": { "by": "characters", "forward": false }
  },

  // vim-multiple-cursors style multiple selections
  { "keys": ["ctrl+n"],
    "command": "find_under_expand"
  },
  { "keys": ["ctrl+x"],
    "command": "find_under_expand_skip",
    "context": [
      { "key": "num_selections", "operator": "not_equal", "operand": 0 }
    ]
  },
  { "keys": ["ctrl+b"],
    "command": "soft_undo",
    "context": [
      { "key": "num_selections", "operator": "not_equal", "operand": 0 }
    ]
  },

  // EasyMotion
  {
    "keys": [",", "f", "<character>"],
    "command": "easy_motion",
    "args": {"select_text": false}
  },
  {
    "keys": ["ctrl+f", "<character>"],
    "command": "easy_motion",
    "args": {"select_text": false}
  },

  // Emmet
  {
    "keys": ["ctrl+t"],
    "command": "run_emmet_action",
    "args": { "action": "matching_pair" },
    "context": [
      { "key": "emmet_action_enabled.matching_pair" }
    ]
  },
  {
    "keys": ["ctrl+up"],
    "command": "run_multiple_commands",
    "args": {
      "commands" : [
        {
          "command": "run_emmet_action",
          "args": {"action": "increment_number_by_1"},
          "context": [
              { "key": "emmet_action_enabled.increment_number_by_1" }
          ]
        },
        { "command": "exit_visual_mode" },
      ]
    }
  },
  {
    "keys": ["ctrl+down"],
    "command": "run_multiple_commands",
    "args": {
      "commands" : [
        {
          "command": "run_emmet_action",
          "args": {"action": "decrement_number_by_1"},
          "context": [
              { "key": "emmet_action_enabled.decrement_number_by_1" }
          ]
        },
        { "command": "exit_visual_mode" },
      ]
    }
  },
  {
    "keys": ["ctrl+up"],
    "command": "run_multiple_commands",
    "args": {
      "commands" : [
        {
          "command": "run_emmet_action",
          "args": {"action": "increment_number_by_1"},
          "context": [
              { "key": "emmet_action_enabled.increment_number_by_1" }
          ]
        },
        { "command": "exit_visual_mode" },
      ]
    }
  },
  {
    "keys": ["ctrl+down"],
    "command": "run_multiple_commands",
    "args": {
      "commands" : [
        {
          "command": "run_emmet_action",
          "args": {"action": "decrement_number_by_1"},
          "context": [
              { "key": "emmet_action_enabled.decrement_number_by_1" }
          ]
        },
        { "command": "exit_visual_mode" },
      ]
    }
  },

  // Tag
  {
    "keys": ["ctrl+shift+t"],
    "command": "expand_selection",
    "args": { "to": "tag" }
  },

  // override CSS auto-insertion of semi-colon
  { "keys": [":"], "command": "insert_snippet", "args": {"contents": ":$0"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.css - meta.selector.css", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\}|$)", "match_all": true }
    ]
  }
]
