[
  { "keys": ["super+alt+w"], "command": "close_all" },

  { "keys": ["super+k", "super+w"],
    "command": "toggle_setting",
    "args": {"setting": "word_wrap"}
  },

  { "keys": ["super+shift+,"], "command": "open_file", "args": {"file": "${packages}/User/Default (OSX).sublime-keymap"} },

  // Switch Paste Behavior
  { "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" },

  // VIM Overrides
  { "keys": ["ctrl+d"],
    "command": "vi_scroll_lines",
    "args": { "forward": true }
  },

  { "keys": ["ctrl+u"],
    "command": "vi_scroll_lines",
    "args": { "forward": false }
  },

  { "keys": ["j", "j"], "command": "exit_auto_complete_and_insert_mode", "context":
    [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  { "keys": ["k", "k"], "command": "exit_auto_complete_and_insert_mode", "context":
    [
      { "key": "setting.command_mode", "operand": false },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  { "keys": ["ctrl+i"], "command": "enter_insert_mode", "context":
    [
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  // Bracket Highlighter
  // Select text between brackets
  {
    "keys": ["ctrl+shift+m"],
    "command": "bh_key",
    "args":
    {
      "no_outside_adj": null,
      "lines" : true,
      "plugin":
      {
        "type": ["__all__"],
        "command": "bh_modules.bracketselect"
      }
    }
  },
  // Select text including brackets
  {
    "keys": ["ctrl+alt+shift+m"],
    "command": "bh_key",
    "args":
    {
      "no_outside_adj": null,
      "lines" : true,
      "plugin":
      {
        "type": ["__all__"],
        "command": "bh_modules.bracketselect",
        "args": {"always_include_brackets": true}
      }
    }
  },

  // Surround
  {
    "keys": ["ctrl+s"],
    "command": "surround_selection",
    "context": [
      {"key": "vi_command_mode_aware"}
    ]
  },
  {
    "keys": ["ctrl+c", "ctrl+s"],
    "command": "surround_change",
    "context": [
      {"key": "vi_command_mode_aware"}
    ]
  },
  {
    "keys": ["ctrl+d", "ctrl+s"],
    "command": "surround_delete",
    "context": [
      {"key": "vi_command_mode_aware"}
    ]
  },

  // Sidebar reveal file shortcut
  { "keys": ["g", "f"],
    "command": "side_bar_reveal",
    "context":
    [
      { "key": "setting.command_mode", "operand": true },
      { "key": "setting.is_widget", "operand": false }
    ]
  },

  // ctrlp command for overlay
  { "keys": ["ctrl+p"],
    "command": "show_overlay",
    "args": { "overlay": "goto", "show_files": true }
  },

  // VIM-like Movement
  {
    "keys": ["ctrl+j"],
    "command": "move",
    "args": { "by": "lines", "forward": true }
  },
  {
    "keys": ["ctrl+k"],
    "command": "move",
    "args": { "by": "lines", "forward": false }
  },
  {
    "keys": ["ctrl+l"],
    "command": "move",
    "args": { "by": "characters", "forward": true }
  },
  {
    "keys": ["ctrl+h"],
    "command": "move",
    "args": { "by": "characters", "forward": false }
  },

  // vim-multiple-cursors style multiple selections
  { "keys": ["ctrl+n"],
    "command": "find_under_expand"
  },
  { "keys": ["ctrl+x"],
    "command": "find_under_expand_skip",
    "context": [
      { "key": "num_selections", "operator": "not_equal", "operand": 0 }
    ]
  },
  { "keys": ["ctrl+b"],
    "command": "soft_undo",
    "context": [
      { "key": "num_selections", "operator": "not_equal", "operand": 0 }
    ]
  },

  // Emmet
  {
    "keys": ["ctrl+t"],
    "command": "run_emmet_action",
    "args": { "action": "matching_pair" },
    "context": [
      { "key": "emmet_action_enabled.matching_pair" }
    ]
  },

  // Tag
  {
    "keys": ["ctrl+shift+t"],
    "command": "expand_selection",
    "args": { "to": "tag" }
  },

  // override CSS auto-insertion of semi-colon
  { "keys": [":"], "command": "insert_snippet", "args": {"contents": ":$0"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "source.css - meta.selector.css", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\}|$)", "match_all": true }
    ]
  },

  // Comments
  { "keys": ["ctrl+forward_slash"], "command": "toggle_comment", "args": { "block": false } },
  { "keys": ["ctrl+shift+forward_slash"], "command": "toggle_comment", "args": { "block": true } },

  // Alignment
  { "keys": ["super+ctrl+a"], "command": "align_tab" },
]
