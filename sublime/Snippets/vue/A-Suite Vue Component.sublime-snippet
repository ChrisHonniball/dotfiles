<snippet>
  <content><![CDATA[<script>
/**
 * ${1:[Route Explanation and Notes]}
 * @${2:type}
 */
export default {
  name: '${3:template}',

  //components: {},

  data() {
    return {
      loading: true,
      error: null
    }
  },

  //computed: {},

  //methods: {},


  //////////////////////////////////////////
  //!          Lifecycle Events           //
  //////////////////////////////////////////

  //beforeCreate() {},
  //created() {},
  //beforeMount() {},
  //mounted() {},
  //beforeUpdate() {},
  //updated() {},
  //beforeDestroy() {},
  //destoyed() {},
};
</script>




<template>
  <div id="$3">
    <div class="ez-app-consent component-wrapper">
      <template v-if="error">
        <asuite-page-error
          :error="error"
        />
      </template>
      <template v-else-if="loading">
        <div class="spacer" style="height: 100px;" />
        <page-loader :text="loading" />
      </template>
      <template v-else>
        <h1>These are (for once) the droids you are looking for!</h1>
      </template>
  </div>
</template>




<style lang="scss">
  #$3 {

  }
</style>
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>asuitevuecomponent</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.html.vue</scope>
  <!-- Optional: Set a description for the snippet. Sublime will default to file name if not present -->
  <description>A-Suite Vue Component</description>
</snippet>
