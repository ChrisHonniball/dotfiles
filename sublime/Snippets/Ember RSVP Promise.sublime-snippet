<snippet>
  <content><![CDATA[let promise = new Ember.RSVP.Promise((resolve, reject) => {
  let ajaxSettings = {
    type: "${1:POST}",
    url: ${2:url},
    dataType: "json",
    data: ${3:\{\}},
    success: (response) => resolve(response),
    error: (error) => reject(error)
  };

  Ember.\$.ajax(ajaxSettings);
}).then(
  (/*response*/) => {
    // After AJAX resolution but before promise result is passed back to app.$0
  }, (response) => {
    // After AJAX resolution but before promise result is passed back to app.
    Ember.Logger.log(
      "%c%s#promise\n response: %O",
      "color: red", // http://www.w3schools.com/html/html_colornames.asp
      this.toString(),
      response
    );

    const error = (response.responseJSON) ? response.responseJSON.errors[0] : {
      detail: "Unknown Error. Check Logs",
      status: 500,
      title: "Unknown API Error"
    };

    return Ember.RSVP.reject(error);
  }
).finally(() => {
  // After AJAX resolution but before promise result is passed back to app.
});]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>promise</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.js</scope>
  <!-- Optional: Set a description for the snippet. Sublime will default to file name if not present -->
  <description>Ember RSVP Promise</description>
</snippet>
