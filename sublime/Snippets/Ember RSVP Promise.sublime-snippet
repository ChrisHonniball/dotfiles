<snippet>
  <content><![CDATA[let promise = new Ember.RSVP.Promise((resolve, reject) => {
  let ajaxSettings = {
    type: "${1:POST}",
    url: ${2:url},
    dataType: "json",
    data: ${3:\{\}},
    success: (response) => {
      // Prior to the promise resolution.
      return resolve(response);
    },
    error: (error) => {
      // Prior to the promise rejection.
      return reject(error);
    }
  };
  
  Ember.\$.ajax(ajaxSettings);
}).then(
  (/*response*/) => {
    // After AJAX resolution but before promise result is passed back to app.$0
  }, (error) => {
    // After AJAX resolution but before promise result is passed back to app.
    return Ember.RSVP.reject({
      status: error.responseJSON.errors[0].status,
      message: error.responseJSON.errors[0].detail
    });
  }
).finally(() => {
  // After AJAX resolution but before promise result is passed back to app.
});]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>promise</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.js</scope>
  <!-- Optional: Set a description for the snippet. Sublime will default to file name if not present -->
  <description>Ember RSVP Promise</description>
</snippet>